{"headers":{"generation":"2020-08-24T06:15:40+00:00","php":"7.4","exakat_version":"2.1.6","exakat_build":"1091","vcs_url":"https:\/\/github.com\/slimphp\/Slim.git","vcs_branch":"(HEAD detached at 4.1.0)","vcs_revision":"d3c69bc624728bcdd32e836025462cfeb5311534","code_last_commit":""},"versions":{"\\":[],"\\Slim\\":{"class":{"App":{"abstract":false,"final":false,"extends":"\\slim\\routing\\routecollectorproxy","implements":["\\psr\\http\\server\\requesthandlerinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"constants":{"VERSION":{"value":"'4.1.0'","visibility":"public","phpdoc":"\/**\n     * Current version\n     *\n     * @var string\n     *\/","attributes":[]}},"properties":{"$middlewareDispatcher":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var MiddlewareDispatcher\n     *\/","attributes":[]},"$routeResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteResolverInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface       $responseFactory\n     * @param ContainerInterface|null        $container\n     * @param CallableResolverInterface|null $callableResolver\n     * @param RouteCollectorInterface|null   $routeCollector\n     * @param RouteResolverInterface|null    $routeResolver\n     *\/","attributes":[]},{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeResolver","reference":false,"typehint":["?RouteResolverInterface"],"value":"null","phpdoc":"","attributes":[]}]},"getRouteResolver":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteResolverInterface"],"phpdoc":"\/**\n     * @return RouteResolverInterface\n     *\/","attributes":[]},"add":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * @param MiddlewareInterface|string|callable $middleware\n     * @return self\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * @param MiddlewareInterface $middleware\n     * @return self\n     *\/","attributes":[]}]},"addRoutingMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RoutingMiddleware"],"phpdoc":"\/**\n     * Add the slim built-in routing middleware to the app middleware stack\n     *\n     * @return RoutingMiddleware\n     *\/","attributes":[]},"addErrorMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ErrorMiddleware"],"phpdoc":"","attributes":[],"arguments":[{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"\/**\n     * Add the slim built-in error middleware to the app middleware stack\n     *\n     * @param bool $displayErrorDetails\n     * @param bool $logErrors\n     * @param bool $logErrorDetails\n     *\n     * @return ErrorMiddleware\n     *\/","attributes":[]},{"name":"$logErrors","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"run":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface","?"],"value":"null","phpdoc":"\/**\n     * Run application\n     *\n     * This method traverses the application middleware stack and then sends the\n     * resultant Response object to the HTTP client.\n     *\n     * @param ServerRequestInterface|null $request\n     * @return void\n     *\/","attributes":[]}]},"handle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"\/**\n         * This is to be in compliance with RFC 2616, Section 9.\n         * If the incoming request method is HEAD, we need to ensure that the response body\n         * is empty as the request may fall back on a GET route handler due to FastRoute's\n         * routing logic which could potentially append content to the response body\n         * https:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec9.html#sec9.4\n         *\/","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Handle a request\n     *\n     * This method traverses the application middleware stack and then returns the\n     * resultant Response object.\n     *\n     * @param ServerRequestInterface $request\n     * @return ResponseInterface\n     *\/","attributes":[]}]}}},"DeferredCallable":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$callable":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var callable|string\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface|null\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * @param callable|string                $callable\n     * @param CallableResolverInterface|null $resolver\n     *\/","attributes":[]},{"name":"$resolver","reference":false,"typehint":["?CallableResolverInterface"],"value":"null","phpdoc":"","attributes":[]}]},"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"\/** @var callable $callable *\/","attributes":[],"arguments":[{"name":"$args","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]}}},"MiddlewareDispatcher":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\requesthandlerinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$tip":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Tip of the middleware call stack\n     *\n     * @var RequestHandlerInterface\n     *\/","attributes":[]},"$container":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ContainerInterface|null\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$kernel","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"\/**\n     * @param RequestHandlerInterface $kernel\n     * @param ContainerInterface|null $container\n     *\/","attributes":[]},{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"","attributes":[]}]},"seedMiddlewareStack":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$kernel","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"\/**\n     * Seed the middleware stack with the inner request handler\n     *\n     * @param RequestHandlerInterface $kernel\n     * @return void\n     *\/","attributes":[]}]},"handle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Invoke the middleware stack\n     *\n     * @param  ServerRequestInterface $request\n     * @return ResponseInterface\n     *\/","attributes":[]}]},"add":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Add a new middleware to the stack\n     *\n     * Middleware are organized as a stack. That means middleware\n     * that have been added before will be executed after the newly\n     * added one (last in, first out).\n     *\n     * @param MiddlewareInterface|string|callable $middleware\n     * @return self\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * Add a new middleware to the stack\n     *\n     * Middleware are organized as a stack. That means middleware\n     * that have been added before will be executed after the newly\n     * added one (last in, first out).\n     *\n     * @param MiddlewareInterface $middleware\n     * @return self\n     *\/","attributes":[]}]},"addDeferred":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add a new middleware by class name\n     *\n     * Middleware are organized as a stack. That means middleware\n     * that have been added before will be executed after the newly\n     * added one (last in, first out).\n     *\n     * @param string $middleware\n     * @return self\n     *\/","attributes":[]}]},"addCallable":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["callable"],"value":"","phpdoc":"\/**\n     * Add a (non standard) callable middleware to the stack\n     *\n     * Middleware are organized as a stack. That means middleware\n     * that have been added before will be executed after the newly\n     * added one (last in, first out).\n     *\n     * @param callable $middleware\n     * @return self\n     *\/","attributes":[]}]}}},"ResponseEmitter":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseChunkSize":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var int\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseChunkSize","reference":false,"typehint":["int"],"value":4096,"phpdoc":"\/**\n     * @param int $responseChunkSize\n     *\/","attributes":[]}]},"emit":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"\/**\n     * Send the response the client\n     *\n     * @param ResponseInterface $response\n     * @return void\n     *\/","attributes":[]}]},"emitHeaders":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"\/**\n     * Emit Response Headers\n     *\n     * @param ResponseInterface $response\n     *\/","attributes":[]}]},"emitStatusLine":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"\/**\n     * Emit Status Line\n     *\n     * @param ResponseInterface $response\n     *\/","attributes":[]}]},"emitBody":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"\/**\n     * Emit Body\n     *\n     * @param ResponseInterface $response\n     *\/","attributes":[]}]},"isResponseEmpty":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["bool"],"phpdoc":"","attributes":[],"arguments":[{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"\/**\n     * Asserts response body is empty or status code is 204, 205 or 304\n     *\n     * @param ResponseInterface $response\n     * @return bool\n     *\/","attributes":[]}]}}},"CallableResolver":{"abstract":false,"final":true,"extends":"","implements":["\\slim\\interfaces\\callableresolverinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * This class resolves a string of the format 'class:method' into a closure\n * that can be dispatched.\n *\/","attributes":[],"php":false,"properties":{"$callablePattern":{"value":"","visibility":"public","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$container":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ContainerInterface|null\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"\/**\n     * @param ContainerInterface|null $container\n     *\/","attributes":[]}]},"resolve":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["callable"],"phpdoc":"","attributes":[],"arguments":[{"name":"$toResolve","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Resolve toResolve into a callable that the router can dispatch.\n     *\n     * If toResolve is of the format 'class:method', then try to extract 'class'\n     * from the container otherwise instantiate it and then dispatch 'method'.\n     *\n     * @param mixed $toResolve\n     * @return callable\n     *\n     * @throws RuntimeException if the callable does not exist\n     * @throws RuntimeException if the callable is not resolvable\n     *\/","attributes":[]}]}}}}},"\\Slim\\Middleware\\":{"class":{"RoutingMiddleware":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\middlewareinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$routeResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteResolverInterface\n     *\/","attributes":[]},"$routeParser":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteParserInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeResolver","reference":false,"typehint":["RouteResolverInterface"],"value":"","phpdoc":"\/**\n     * @param RouteResolverInterface $routeResolver\n     * @param RouteParserInterface   $routeParser\n     *\/","attributes":[]},{"name":"$routeParser","reference":false,"typehint":["RouteParserInterface"],"value":"","phpdoc":"","attributes":[]}]},"process":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface  $request\n     * @param RequestHandlerInterface $handler\n     * @return ResponseInterface\n     *\n     * @throws HttpNotFoundException\n     * @throws HttpMethodNotAllowedException\n     * @throws RuntimeException\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"","attributes":[]}]},"performRouting":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ServerRequestInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Perform routing\n     *\n     * @param  ServerRequestInterface $request PSR7 Server Request\n     * @return ServerRequestInterface\n     *\n     * @throws HttpNotFoundException\n     * @throws HttpMethodNotAllowedException\n     * @throws RuntimeException\n     *\/","attributes":[]}]}}},"ContentLengthMiddleware":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\middlewareinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"process":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"\/** @var ResponseInterface $response *\/","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface  $request\n     * @param RequestHandlerInterface $handler\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"","attributes":[]}]}}},"MethodOverrideMiddleware":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\middlewareinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"process":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface  $request\n     * @param RequestHandlerInterface $handler\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"","attributes":[]}]}}},"OutputBufferingMiddleware":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\middlewareinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"constants":{"PREPEND":{"value":"'prepend'","visibility":"public","phpdoc":"","attributes":[]},"APPEND":{"value":"'append'","visibility":"public","phpdoc":"","attributes":[]}},"properties":{"$streamFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var StreamFactoryInterface\n     *\/","attributes":[]},"$style":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$streamFactory","reference":false,"typehint":["StreamFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param StreamFactoryInterface $streamFactory\n     * @param string                 $style Either \"append\" or \"prepend\"\n     *\/","attributes":[]},{"name":"$style","reference":false,"typehint":["string"],"value":"'append'","phpdoc":"","attributes":[]}]},"process":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"\/** @var ResponseInterface $response *\/","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface  $request\n     * @param RequestHandlerInterface $handler\n     * @return ResponseInterface\n     * @throws Throwable\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"","attributes":[]}]}}},"ErrorMiddleware":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\middlewareinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$responseFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface\n     *\/","attributes":[]},"$displayErrorDetails":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$logErrors":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$logErrorDetails":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$handlers":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var array\n     *\/","attributes":[]},"$defaultErrorHandler":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ErrorHandlerInterface|callable|null\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"\/**\n     * @param CallableResolverInterface $callableResolver\n     * @param ResponseFactoryInterface  $responseFactory\n     * @param bool                      $displayErrorDetails\n     * @param bool                      $logErrors\n     * @param bool                      $logErrorDetails\n     *\/","attributes":[]},{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrors","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"process":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface  $request\n     * @param RequestHandlerInterface $handler\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":["RequestHandlerInterface"],"value":"","phpdoc":"","attributes":[]}]},"handleException":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface $request\n     * @param Throwable              $exception\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"","attributes":[]}]},"getErrorHandler":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$type","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Get callable to handle scenarios where an error\n     * occurs when processing the current request.\n     *\n     * @param string $type Exception\/Throwable name. ie: RuntimeException::class\n     * @return callable|ErrorHandler\n     *\/","attributes":[]}]},"getDefaultErrorHandler":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"\/**\n     * Get default error handler\n     *\n     * @return ErrorHandler|callable\n     *\/","attributes":[]},"setDefaultErrorHandler":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$handler","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Set callable as the default Slim application error handler.\n     *\n     * This service MUST return a callable that accepts\n     * three arguments optionally four arguments.\n     *\n     * 1. Instance of \\Psr\\Http\\Message\\ServerRequestInterface\n     * 2. Instance of \\Psr\\Http\\Message\\ResponseInterface\n     * 3. Instance of \\Exception\n     * 4. Boolean displayErrorDetails (optional)\n     *\n     * The callable MUST return an instance of\n     * \\Psr\\Http\\Message\\ResponseInterface.\n     *\n     * @param callable|ErrorHandler $handler\n     * @return self\n     *\/","attributes":[]}]},"setErrorHandler":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$type","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set callable to handle scenarios where an error\n     * occurs when processing the current request.\n     *\n     * This service MUST return a callable that accepts\n     * three arguments optionally four arguments.\n     *\n     * 1. Instance of \\Psr\\Http\\Message\\ServerRequestInterface\n     * 2. Instance of \\Psr\\Http\\Message\\ResponseInterface\n     * 3. Instance of \\Exception\n     * 4. Boolean displayErrorDetails (optional)\n     *\n     * The callable MUST return an instance of\n     * \\Psr\\Http\\Message\\ResponseInterface.\n     *\n     * @param string                         $type Exception\/Throwable name. ie: RuntimeException::class\n     * @param callable|ErrorHandlerInterface $handler\n     * @return self\n     *\/","attributes":[]},{"name":"$handler","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]}}}}},"\\Slim\\Routing\\":{"class":{"RouteCollectorProxy":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routecollectorproxyinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$container":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ContainerInterface|null\n     *\/","attributes":[]},"$routeCollector":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorInterface\n     *\/","attributes":[]},"$basePath":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface     $responseFactory\n     * @param CallableResolverInterface    $callableResolver\n     * @param RouteCollectorInterface|null $routeCollector\n     * @param ContainerInterface|null      $container\n     * @param string                       $basePath\n     *\/","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeCollector","reference":false,"typehint":["?RouteCollectorInterface"],"value":"null","phpdoc":"","attributes":[]},{"name":"$basePath","reference":false,"typehint":["string"],"value":"''","phpdoc":"","attributes":[]}]},"getResponseFactory":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getCallableResolver":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["CallableResolverInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getContainer":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ContainerInterface","?"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getRouteCollector":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getBasePath":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setBasePath":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorProxyInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$basePath","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"get":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"post":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"put":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"patch":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"delete":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"options":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"any":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"map":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"group":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"redirect":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$from","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$to","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]},{"name":"$status","reference":false,"typehint":["int"],"value":302,"phpdoc":"","attributes":[]}]}}},"RoutingResults":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"constants":{"NOT_FOUND":{"value":0,"visibility":"public","phpdoc":"","attributes":[]},"FOUND":{"value":1,"visibility":"public","phpdoc":"","attributes":[]},"METHOD_NOT_ALLOWED":{"value":2,"visibility":"public","phpdoc":"","attributes":[]}},"properties":{"$dispatcher":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var DispatcherInterface\n     *\/","attributes":[]},"$method":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$uri":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$routeStatus":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var int\n     * The status is one of the constants shown above\n     * NOT_FOUND = 0\n     * FOUND = 1\n     * METHOD_NOT_ALLOWED = 2\n     *\/","attributes":[]},"$routeIdentifier":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var null|string\n     *\/","attributes":[]},"$routeArguments":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var array\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$dispatcher","reference":false,"typehint":["DispatcherInterface"],"value":"","phpdoc":"\/**\n     * @param DispatcherInterface $dispatcher\n     * @param string              $method\n     * @param string              $uri\n     * @param int                 $routeStatus\n     * @param string|null         $routeIdentifier\n     * @param array               $routeArguments\n     *\/","attributes":[]},{"name":"$method","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeStatus","reference":false,"typehint":["int"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeIdentifier","reference":false,"typehint":["string","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeArguments","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]},"getDispatcher":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["DispatcherInterface"],"phpdoc":"\/**\n     * @return DispatcherInterface\n     *\/","attributes":[]},"getMethod":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * @return string\n     *\/","attributes":[]},"getUri":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * @return string\n     *\/","attributes":[]},"getRouteStatus":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["int"],"phpdoc":"\/**\n     * @return int\n     *\/","attributes":[]},"getRouteIdentifier":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["?string"],"phpdoc":"\/**\n     * @return null|string\n     *\/","attributes":[]},"getRouteArguments":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$urlDecode","reference":false,"typehint":["bool"],"value":"true","phpdoc":"\/**\n     * @param bool $urlDecode\n     * @return array\n     *\/","attributes":[]}]},"getAllowedMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * @return array\n     *\/","attributes":[]}}},"FastRouteDispatcher":{"abstract":false,"final":false,"extends":"\\fastroute\\dispatcher\\groupcountbased","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$allowedMethods":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var array\n     *\/","attributes":[]}},"methods":{"dispatch":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$httpMethod","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * @param string $httpMethod\n     * @param string $uri\n     * @return array\n     *\/","attributes":[]},{"name":"$uri","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"routingResultsFromVariableRouteResults":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$result","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * @param array $result\n     * @return array\n     *\/","attributes":[]}]},"getAllowedMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $uri\n     * @return array\n     *\/","attributes":[]}]}}},"Dispatcher":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\dispatcherinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$routeCollector":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorInterface\n     *\/","attributes":[]},"$dispatcher":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var FastRouteDispatcher|null\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface"],"value":"","phpdoc":"\/**\n     * @param RouteCollectorInterface $routeCollector\n     *\/","attributes":[]}]},"createDispatcher":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["FastRouteDispatcher"],"phpdoc":"\/**\n     * @return FastRouteDispatcher\n     *\/","attributes":[]},"dispatch":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RoutingResults"],"phpdoc":"","attributes":[],"arguments":[{"name":"$method","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"getAllowedMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]}}},"RouteContext":{"abstract":false,"final":true,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$route":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteInterface|null\n     *\/","attributes":[]},"$routeParser":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteParserInterface\n     *\/","attributes":[]},"$routingResults":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RoutingResults\n     *\/","attributes":[]}},"methods":{"fromRequest":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$serverRequest","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface $serverRequest\n     * @return RouteContext\n     *\/","attributes":[]}]},"__construct":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$route","reference":false,"typehint":["RouteInterface","?"],"value":"","phpdoc":"\/**\n     * @param RouteInterface|null  $route\n     * @param RouteParserInterface $routeParser\n     * @param RoutingResults       $routingResults\n     *\/","attributes":[]},{"name":"$routeParser","reference":false,"typehint":["RouteParserInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routingResults","reference":false,"typehint":["RoutingResults"],"value":"","phpdoc":"","attributes":[]}]},"getRoute":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface","?"],"phpdoc":"\/**\n     * @return RouteInterface|null\n     *\/","attributes":[]},"getRouteParser":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteParserInterface"],"phpdoc":"\/**\n     * @return RouteParserInterface\n     *\/","attributes":[]},"getRoutingResults":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RoutingResults"],"phpdoc":"\/**\n     * @return RoutingResults\n     *\/","attributes":[]}}},"RouteRunner":{"abstract":false,"final":false,"extends":"","implements":["\\psr\\http\\server\\requesthandlerinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$routeResolver":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteResolverInterface\n     *\/","attributes":[]},"$routeParser":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteParserInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeResolver","reference":false,"typehint":["RouteResolverInterface"],"value":"","phpdoc":"\/**\n     * @param RouteResolverInterface $routeResolver\n     * @param RouteParserInterface   $routeParser\n     *\/","attributes":[]},{"name":"$routeParser","reference":false,"typehint":["RouteParserInterface"],"value":"","phpdoc":"","attributes":[]}]},"handle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"\/** @var Route $route *\/","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * This request handler is instantiated automatically in App::__construct()\n     * It is at the very tip of the middleware queue meaning it will be executed\n     * last and it detects whether or not routing has been performed in the user\n     * defined middleware stack. In the event that the user did not perform routing\n     * it is done here\n     *\n     * @param ServerRequestInterface $request\n     * @return ResponseInterface\n     * @throws HttpNotFoundException\n     * @throws HttpMethodNotAllowedException\n     *\/","attributes":[]}]}}},"RouteGroup":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routegroupinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$callable":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var callable|string\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$routeCollectorProxy":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorProxyInterface\n     *\/","attributes":[]},"$middleware":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var MiddlewareInterface[]|string[]|callable[]\n     *\/","attributes":[]},"$pattern":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string                       $pattern\n     * @param callable|string              $callable\n     * @param CallableResolverInterface    $callableResolver\n     * @param RouteCollectorProxyInterface $routeCollectorProxy\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeCollectorProxy","reference":false,"typehint":["RouteCollectorProxyInterface"],"value":"","phpdoc":"","attributes":[]}]},"collectRoutes":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"add":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"appendMiddlewareToDispatcher":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$dispatcher","reference":false,"typehint":["MiddlewareDispatcher"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getPattern":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}}},"Route":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routeinterface","\\psr\\http\\server\\requesthandlerinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$methods":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * HTTP methods supported by this route\n     *\n     * @var string[]\n     *\/","attributes":[]},"$identifier":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route identifier\n     *\n     * @var string\n     *\/","attributes":[]},"$name":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route name\n     *\n     * @var null|string\n     *\/","attributes":[]},"$groups":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Parent route groups\n     *\n     * @var RouteGroupInterface[]\n     *\/","attributes":[]},"$invocationStrategy":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var InvocationStrategyInterface\n     *\/","attributes":[]},"$arguments":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route parameters\n     *\n     * @var array\n     *\/","attributes":[]},"$savedArguments":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route arguments parameters\n     *\n     * @var array\n     *\/","attributes":[]},"$container":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Container\n     *\n     * @var ContainerInterface|null\n     *\/","attributes":[]},"$middlewareDispatcher":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var MiddlewareDispatcher\n     *\/","attributes":[]},"$callable":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route callable\n     *\n     * @var callable|string\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$responseFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface\n     *\/","attributes":[]},"$pattern":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route pattern\n     *\n     * @var string\n     *\/","attributes":[]},"$groupMiddlewareAppended":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * @param string[]                         $methods    The route HTTP methods\n     * @param string                           $pattern    The route pattern\n     * @param callable|string                  $callable   The route callable\n     * @param ResponseFactoryInterface         $responseFactory\n     * @param CallableResolverInterface        $callableResolver\n     * @param ContainerInterface|null          $container\n     * @param InvocationStrategyInterface|null $invocationStrategy\n     * @param RouteGroup[]                     $groups     The parent route groups\n     * @param int                              $identifier The route identifier\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]},{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$invocationStrategy","reference":false,"typehint":["?InvocationStrategyInterface"],"value":"null","phpdoc":"","attributes":[]},{"name":"$groups","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$identifier","reference":false,"typehint":["int"],"value":0,"phpdoc":"","attributes":[]}]},"getCallableResolver":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["CallableResolverInterface"],"phpdoc":"\/**\n     * @return CallableResolverInterface\n     *\/","attributes":[]},"getInvocationStrategy":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["InvocationStrategyInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setInvocationStrategy":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$invocationStrategy","reference":false,"typehint":["InvocationStrategyInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getPattern":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setPattern":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getCallable":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setCallable":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getName":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["?string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setName":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getIdentifier":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getArgument":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["?string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$default","reference":false,"typehint":["?string"],"value":"null","phpdoc":"","attributes":[]}]},"getArguments":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setArguments":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$arguments","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$includeInSavedArguments","reference":false,"typehint":["bool"],"value":"true","phpdoc":"","attributes":[]}]},"getGroups":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * @return RouteGroupInterface[]\n     *\/","attributes":[]},"add":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"prepare":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$arguments","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"setArgument":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$value","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$includeInSavedArguments","reference":false,"typehint":["bool"],"value":"true","phpdoc":"","attributes":[]}]},"run":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"appendGroupMiddlewareToRoute":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"\/**\n     * @return void\n     *\/","attributes":[]},"handle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]}}},"RouteCollector":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routecollectorinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * RouteCollector is used to collect routes and route groups\n * as well as generate paths and URLs relative to its environment\n *\/","attributes":[],"php":false,"properties":{"$routeParser":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteParserInterface\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$container":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ContainerInterface|null\n     *\/","attributes":[]},"$defaultInvocationStrategy":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var InvocationStrategyInterface\n     *\/","attributes":[]},"$basePath":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Base path used in pathFor()\n     *\n     * @var string\n     *\/","attributes":[]},"$cacheFile":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Path to fast route cache file. Set to false to disable route caching\n     *\n     * @var string|null\n     *\/","attributes":[]},"$routes":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Routes\n     *\n     * @var RouteInterface[]\n     *\/","attributes":[]},"$routeGroups":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route groups\n     *\n     * @var RouteGroup[]\n     *\/","attributes":[]},"$routeCounter":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * Route counter incrementer\n     *\n     * @var int\n     *\/","attributes":[]},"$responseFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface    $responseFactory\n     * @param CallableResolverInterface   $callableResolver\n     * @param ContainerInterface|null     $container\n     * @param InvocationStrategyInterface $defaultInvocationStrategy\n     * @param RouteParserInterface        $routeParser\n     * @param string                      $cacheFile\n     *\/","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$container","reference":false,"typehint":["ContainerInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$defaultInvocationStrategy","reference":false,"typehint":["InvocationStrategyInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeParser","reference":false,"typehint":["?RouteParserInterface"],"value":"null","phpdoc":"","attributes":[]},{"name":"$cacheFile","reference":false,"typehint":["string","?"],"value":"null","phpdoc":"","attributes":[]}]},"getRouteParser":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteParserInterface"],"phpdoc":"\/**\n     * @return RouteParserInterface\n     *\/","attributes":[]},"getDefaultInvocationStrategy":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["InvocationStrategyInterface"],"phpdoc":"\/**\n     * Get default route invocation strategy\n     *\n     * @return InvocationStrategyInterface\n     *\/","attributes":[]},"setDefaultInvocationStrategy":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$strategy","reference":false,"typehint":["InvocationStrategyInterface"],"value":"","phpdoc":"\/**\n     * @param InvocationStrategyInterface $strategy\n     * @return self\n     *\/","attributes":[]}]},"getCacheFile":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string","?"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setCacheFile":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$cacheFile","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getBasePath":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setBasePath":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$basePath","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set the base path used in pathFor()\n     *\n     * @param string $basePath\n     *\n     * @return self\n     *\/","attributes":[]}]},"getRoutes":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"removeNamedRoute":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"\/** @var Route $route *\/","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"getNamedRoute":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"lookupRoute":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$identifier","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"group":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"map":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$handler","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"createRoute":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]}}},"RouteParser":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routeparserinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$routeCollector":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorInterface\n     *\/","attributes":[]},"$routeParser":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var Std\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface"],"value":"","phpdoc":"\/**\n     * @param RouteCollectorInterface $routeCollector\n     *\/","attributes":[]}]},"relativeUrlFor":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]},"urlFor":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]},"fullUrlFor":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["UriInterface"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]}}},"RouteResolver":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\routeresolverinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * RouteResolver instantiates the FastRoute dispatcher\n * and computes the routing results of a given URI and request method\n *\/","attributes":[],"php":false,"properties":{"$routeCollector":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorInterface\n     *\/","attributes":[]},"$dispatcher":{"value":"","visibility":"private","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var DispatcherInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface"],"value":"","phpdoc":"\/**\n     * @param RouteCollectorInterface  $routeCollector\n     * @param DispatcherInterface|null $dispatcher\n     *\/","attributes":[]},{"name":"$dispatcher","reference":false,"typehint":["DispatcherInterface","?"],"value":"null","phpdoc":"","attributes":[]}]},"computeRoutingResults":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RoutingResults"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $uri Should be $request->getUri()->getPath()\n     * @param string $method\n     * @return RoutingResults\n     *\/","attributes":[]},{"name":"$method","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"resolveRoute":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$identifier","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $identifier\n     * @return RouteInterface\n     * @throws RuntimeException\n     *\/","attributes":[]}]}}}}},"\\Slim\\Error\\":{"class":{"AbstractErrorRenderer":{"abstract":true,"final":false,"extends":"","implements":["\\slim\\interfaces\\errorrendererinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * Abstract Slim application error renderer\n *\n * It outputs the error message and diagnostic information in one of the following formats:\n * JSON, XML, Plain Text or HTML\n *\/","attributes":[],"php":false}}},"\\Slim\\Error\\Renderers\\":{"class":{"PlainTextErrorRenderer":{"abstract":false,"final":false,"extends":"\\slim\\error\\abstracterrorrenderer","implements":[],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default Slim application Plain Text Error Renderer\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @param bool      $displayErrorDetails\n     * @return string\n     *\/","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"formatExceptionFragment":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @return string\n     *\/","attributes":[]}]}}},"HtmlErrorRenderer":{"abstract":false,"final":false,"extends":"\\slim\\error\\abstracterrorrenderer","implements":[],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default Slim application HTML Error Renderer\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @param bool      $displayErrorDetails\n     * @return string\n     *\/","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"renderExceptionFragment":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @return string\n     *\/","attributes":[]}]},"renderHtmlBody":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$title","reference":false,"typehint":["string"],"value":"''","phpdoc":"\/**\n     * @param string $title\n     * @param string $html\n     * @return string\n     *\/","attributes":[]},{"name":"$html","reference":false,"typehint":["string"],"value":"''","phpdoc":"","attributes":[]}]}}},"JsonErrorRenderer":{"abstract":false,"final":false,"extends":"\\slim\\error\\abstracterrorrenderer","implements":[],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default Slim application JSON Error Renderer\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @param bool      $displayErrorDetails\n     * @return string\n     *\/","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"formatExceptionFragment":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @return array\n     *\/","attributes":[]}]}}},"XmlErrorRenderer":{"abstract":false,"final":false,"extends":"\\slim\\error\\abstracterrorrenderer","implements":[],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default Slim application XML Error Renderer\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @param bool      $displayErrorDetails\n     * @return string\n     *\/","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"createCdataSection":{"visibility":"private","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$content","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Returns a CDATA section with the given content.\n     *\n     * @param  string $content\n     * @return string\n     *\/","attributes":[]}]}}}}},"\\Slim\\Exception\\":{"class":{"HttpNotFoundException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}},"HttpMethodNotAllowedException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$allowedMethods":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var array\n     *\/","attributes":[]},"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}},"methods":{"getAllowedMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * @return array\n     *\/","attributes":[]},"setAllowedMethods":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["HttpMethodNotAllowedException"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * @param array $methods\n     * @return self\n     *\/","attributes":[]}]}}},"HttpException":{"abstract":false,"final":false,"extends":"\\exception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$request":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ServerRequestInterface\n     *\/","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface $request\n     * @param string                 $message\n     * @param int                    $code\n     * @param Throwable|null         $previous\n     *\/","attributes":[]},{"name":"$message","reference":false,"typehint":["string"],"value":"''","phpdoc":"","attributes":[]},{"name":"$code","reference":false,"typehint":["int"],"value":0,"phpdoc":"","attributes":[]},{"name":"$previous","reference":false,"typehint":["Throwable","?"],"value":"null","phpdoc":"","attributes":[]}]},"getRequest":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ServerRequestInterface"],"phpdoc":"\/**\n     * @return ServerRequestInterface\n     *\/","attributes":[]},"getTitle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * @return string\n     *\/","attributes":[]},"setTitle":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$title","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $title\n     * @return self\n     *\/","attributes":[]}]},"getDescription":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * @return string\n     *\/","attributes":[]},"setDescription":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["self"],"phpdoc":"","attributes":[],"arguments":[{"name":"$description","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $description\n     * @return self\n     *\/","attributes":[]}]}}},"HttpBadRequestException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}},"HttpForbiddenException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}},"HttpNotImplementedException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}},"HttpSpecializedException":{"abstract":true,"final":false,"extends":"\\slim\\exception\\httpexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface $request\n     * @param string|null            $message\n     * @param Throwable|null         $previous\n     *\/","attributes":[]},{"name":"$message","reference":false,"typehint":["?string"],"value":"null","phpdoc":"","attributes":[]},{"name":"$previous","reference":false,"typehint":["?Throwable"],"value":"null","phpdoc":"","attributes":[]}]}}},"HttpInternalServerErrorException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}},"HttpUnauthorizedException":{"abstract":false,"final":false,"extends":"\\slim\\exception\\httpspecializedexception","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$code":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$message":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$title":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]},"$description":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"","attributes":[]}}}}},"\\Slim\\Handlers\\":{"class":{"ErrorHandler":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\errorhandlerinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default Slim application error handler\n *\n * It outputs the error message and diagnostic information in one of the following formats:\n * JSON, XML, Plain Text or HTML based on the Accept header.\n *\/","attributes":[],"php":false,"properties":{"$defaultErrorRendererContentType":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$defaultErrorRenderer":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ErrorRendererInterface|string|callable\n     *\/","attributes":[]},"$errorRenderers":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var array\n     *\/","attributes":[]},"$displayErrorDetails":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$logErrors":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$logErrorDetails":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]},"$contentType":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string|null\n     *\/","attributes":[]},"$method":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$request":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ServerRequestInterface\n     *\/","attributes":[]},"$exception":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var Throwable\n     *\/","attributes":[]},"$statusCode":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var int\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface\n     *\/","attributes":[]},"$responseFactory":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"\/**\n     * @param CallableResolverInterface $callableResolver\n     * @param ResponseFactoryInterface  $responseFactory\n     *\/","attributes":[]},{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"","attributes":[]}]},"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Invoke error handler\n     *\n     * @param ServerRequestInterface $request             The most recent Request object\n     * @param Throwable              $exception           The caught Exception object\n     * @param bool                   $displayErrorDetails Whether or not to display the error details\n     * @param bool                   $logErrors           Whether or not to log errors\n     * @param bool                   $logErrorDetails     Whether or not to log error details\n     *\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrors","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]},"forceContentType":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$contentType","reference":false,"typehint":["string","?"],"value":"","phpdoc":"\/**\n     * Force the content type for all error handler responses.\n     *\n     * @param string|null $contentType The content type\n     *\/","attributes":[]}]},"determineStatusCode":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["int"],"phpdoc":"\/**\n     * @return int\n     *\/","attributes":[]},"determineContentType":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["?string"],"phpdoc":"\/**\n             * Ensure other supported content types take precedence over text\/plain\n             * when multiple content types are provided via Accept header.\n             *\/","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Determine which content type we know about is wanted using Accept header\n     *\n     * Note: This method is a bare-bones implementation designed specifically for\n     * Slim's error handling requirements. Consider a fully-feature solution such\n     * as willdurand\/negotiation for any other situation.\n     *\n     * @param ServerRequestInterface $request\n     * @return string\n     *\/","attributes":[]}]},"determineRenderer":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["callable"],"phpdoc":"\/**\n     * Determine which renderer to use based on content type\n     *\n     * @return callable\n     *\n     * @throws RuntimeException\n     *\/","attributes":[]},"registerErrorRenderer":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$contentType","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Register an error renderer for a specific content-type\n     *\n     * @param string  $contentType  The content-type this renderer should be registered to\n     * @param ErrorRendererInterface|string|callable $errorRenderer The error renderer\n     *\/","attributes":[]},{"name":"$errorRenderer","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"setDefaultErrorRenderer":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$contentType","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set the default error renderer\n     *\n     * @param string                                 $contentType   The content type of the default error renderer\n     * @param ErrorRendererInterface|string|callable $errorRenderer The default error renderer\n     *\/","attributes":[]},{"name":"$errorRenderer","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"writeToErrorLog":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"\/**\n     * Write to the error log if $logErrors has been set to true\n     *\n     * @return void\n     *\/","attributes":[]},"logError":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$error","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Wraps the error_log function so that this can be easily tested\n     *\n     * @param string $error\n     * @return void\n     *\/","attributes":[]}]},"respond":{"visibility":"protected","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"\/**\n     * @return ResponseInterface\n     *\/","attributes":[]}}}}},"\\Slim\\Handlers\\Strategies\\":{"class":{"RequestResponse":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\invocationstrategyinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * Default route callback strategy with route parameters as an array of arguments.\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":["callable"],"value":"","phpdoc":"\/**\n     * Invoke a route callable with request, response, and all route parameters\n     * as an array of arguments.\n     *\n     * @param callable               $callable\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param array                  $routeArguments\n     *\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeArguments","reference":false,"typehint":["array"],"value":"","phpdoc":"","attributes":[]}]}}},"RequestResponseArgs":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\invocationstrategyinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * Route callback strategy with route parameters as individual arguments.\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":["callable"],"value":"","phpdoc":"\/**\n     * Invoke a route callable with request, response and all route parameters\n     * as individual arguments.\n     *\n     * @param callable               $callable\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param array                  $routeArguments\n     *\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeArguments","reference":false,"typehint":["array"],"value":"","phpdoc":"","attributes":[]}]}}},"RequestHandler":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\requesthandlerinvocationstrategyinterface"],"use":[],"useoptions":[],"phpdoc":"\/**\n * PSR-15 RequestHandler invocation strategy\n *\/","attributes":[],"php":false,"properties":{"$appendRouteArgumentsToRequestAttributes":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$appendRouteArgumentsToRequestAttributes","reference":false,"typehint":["bool"],"value":"false","phpdoc":"\/**\n     * @param bool $appendRouteArgumentsToRequestAttributes\n     *\/","attributes":[]}]},"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":["callable"],"value":"","phpdoc":"\/**\n     * Invoke a route callable that implements RequestHandlerInterface\n     *\n     * @param callable               $callable\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param array                  $routeArguments\n     *\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeArguments","reference":false,"typehint":["array"],"value":"","phpdoc":"","attributes":[]}]}}}}},"\\Slim\\Factory\\":{"class":{"AppFactory":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$psr17FactoryProvider":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var Psr17FactoryProviderInterface|null\n     *\/","attributes":[]},"$responseFactory":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var ResponseFactoryInterface|null\n     *\/","attributes":[]},"$streamFactory":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var StreamFactoryInterface|null\n     *\/","attributes":[]},"$container":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var ContainerInterface|null\n     *\/","attributes":[]},"$callableResolver":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var CallableResolverInterface|null\n     *\/","attributes":[]},"$routeCollector":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var RouteCollectorInterface|null\n     *\/","attributes":[]},"$routeResolver":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var RouteResolverInterface|null\n     *\/","attributes":[]},"$slimHttpDecoratorsAutomaticDetectionEnabled":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]}},"methods":{"create":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["App"],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["?ResponseFactoryInterface"],"value":"null","phpdoc":"\/**\n     * @param ResponseFactoryInterface|null  $responseFactory\n     * @param ContainerInterface|null        $container\n     * @param CallableResolverInterface|null $callableResolver\n     * @param RouteCollectorInterface|null   $routeCollector\n     * @param RouteResolverInterface|null    $routeResolver\n     * @return App\n     *\/","attributes":[]},{"name":"$container","reference":false,"typehint":["?ContainerInterface"],"value":"null","phpdoc":"","attributes":[]},{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface","?"],"value":"null","phpdoc":"","attributes":[]},{"name":"$routeResolver","reference":false,"typehint":["RouteResolverInterface","?"],"value":"null","phpdoc":"","attributes":[]}]},"determineResponseFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"\/**\n     * @return ResponseFactoryInterface\n     * @throws RuntimeException\n     *\/","attributes":[]},"attemptResponseFactoryDecoration":{"visibility":"protected","static":true,"abstract":false,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface $responseFactory\n     * @param StreamFactoryInterface   $streamFactory\n     * @return ResponseFactoryInterface\n     *\/","attributes":[]},{"name":"$streamFactory","reference":false,"typehint":["StreamFactoryInterface"],"value":"","phpdoc":"","attributes":[]}]},"setPsr17FactoryProvider":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$psr17FactoryProvider","reference":false,"typehint":["Psr17FactoryProviderInterface"],"value":"","phpdoc":"\/**\n     * @param Psr17FactoryProviderInterface $psr17FactoryProvider\n     *\/","attributes":[]}]},"setResponseFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface $responseFactory\n     *\/","attributes":[]}]},"setStreamFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$streamFactory","reference":false,"typehint":["StreamFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param StreamFactoryInterface $streamFactory\n     *\/","attributes":[]}]},"setContainer":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$container","reference":false,"typehint":["ContainerInterface"],"value":"","phpdoc":"\/**\n     * @param ContainerInterface $container\n     *\/","attributes":[]}]},"setCallableResolver":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callableResolver","reference":false,"typehint":["CallableResolverInterface"],"value":"","phpdoc":"\/**\n     * @param CallableResolverInterface $callableResolver\n     *\/","attributes":[]}]},"setRouteCollector":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeCollector","reference":false,"typehint":["RouteCollectorInterface"],"value":"","phpdoc":"\/**\n     * @param RouteCollectorInterface $routeCollector\n     *\/","attributes":[]}]},"setRouteResolver":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeResolver","reference":false,"typehint":["RouteResolverInterface"],"value":"","phpdoc":"\/**\n     * @param RouteResolverInterface $routeResolver\n     *\/","attributes":[]}]},"setSlimHttpDecoratorsAutomaticDetection":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$enabled","reference":false,"typehint":["bool"],"value":"","phpdoc":"\/**\n     * @param bool $enabled\n     *\/","attributes":[]}]}}},"ServerRequestCreatorFactory":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$psr17FactoryProvider":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var Psr17FactoryProviderInterface|null\n     *\/","attributes":[]},"$serverRequestCreator":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var ServerRequestCreatorInterface|null\n     *\/","attributes":[]},"$slimHttpDecoratorsAutomaticDetectionEnabled":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var bool\n     *\/","attributes":[]}},"methods":{"create":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"\/**\n     * @return ServerRequestCreatorInterface\n     *\/","attributes":[]},"determineServerRequestCreator":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"\/**\n     * @return ServerRequestCreatorInterface\n     * @throws RuntimeException\n     *\/","attributes":[]},"attemptServerRequestCreatorDecoration":{"visibility":"protected","static":true,"abstract":false,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$serverRequestCreator","reference":false,"typehint":["ServerRequestCreatorInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestCreatorInterface $serverRequestCreator\n     * @return ServerRequestCreatorInterface\n     *\/","attributes":[]}]},"setPsr17FactoryProvider":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$psr17FactoryProvider","reference":false,"typehint":["Psr17FactoryProviderInterface"],"value":"","phpdoc":"\/**\n     * @param Psr17FactoryProviderInterface $psr17FactoryProvider\n     *\/","attributes":[]}]},"setServerRequestCreator":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$serverRequestCreator","reference":false,"typehint":["ServerRequestCreatorInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestCreatorInterface $serverRequestCreator\n     *\/","attributes":[]}]},"setSlimHttpDecoratorsAutomaticDetection":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$enabled","reference":false,"typehint":["bool"],"value":"","phpdoc":"\/**\n     * @param bool $enabled\n     *\/","attributes":[]}]}}}}},"\\Slim\\Factory\\Psr17\\":{"class":{"NyholmPsr17Factory":{"abstract":false,"final":false,"extends":"\\slim\\factory\\psr17\\psr17factory","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$streamFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]}},"methods":{"getServerRequestCreator":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}}},"ZendDiactorosPsr17Factory":{"abstract":false,"final":false,"extends":"\\slim\\factory\\psr17\\psr17factory","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$streamFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]}}},"ServerRequestCreator":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\serverrequestcreatorinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$serverRequestCreator":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var object|string\n     *\/","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$serverRequestCreator","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * @param object|string $serverRequestCreator\n     * @param string        $serverRequestCreatorMethod\n     *\/","attributes":[]},{"name":"$serverRequestCreatorMethod","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"createServerRequestFromGlobals":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ServerRequestInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}}},"GuzzlePsr17Factory":{"abstract":false,"final":false,"extends":"\\slim\\factory\\psr17\\psr17factory","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$streamFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]}}},"SlimHttpServerRequestCreator":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\serverrequestcreatorinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$serverRequestCreator":{"value":"","visibility":"protected","static":false,"typehint":[""],"phpdoc":"\/**\n     * @var ServerRequestCreatorInterface\n     *\/","attributes":[]},"$serverRequestDecoratorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"__construct":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":[""],"phpdoc":"","attributes":[],"arguments":[{"name":"$serverRequestCreator","reference":false,"typehint":["ServerRequestCreatorInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestCreatorInterface $serverRequestCreator\n     *\/","attributes":[]}]},"createServerRequestFromGlobals":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ServerRequestInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"isServerRequestDecoratorAvailable":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * @return bool\n     *\/","attributes":[]}}},"SlimHttpPsr17Factory":{"abstract":false,"final":false,"extends":"\\slim\\factory\\psr17\\psr17factory","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]}},"methods":{"createDecoratedResponseFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$responseFactory","reference":false,"typehint":["ResponseFactoryInterface"],"value":"","phpdoc":"\/**\n     * @param ResponseFactoryInterface $responseFactory\n     * @param StreamFactoryInterface   $streamFactory\n     * @return ResponseFactoryInterface\n     *\/","attributes":[]},{"name":"$streamFactory","reference":false,"typehint":["StreamFactoryInterface"],"value":"","phpdoc":"","attributes":[]}]}}},"SlimPsr17Factory":{"abstract":false,"final":false,"extends":"\\slim\\factory\\psr17\\psr17factory","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$streamFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"","attributes":[]}}},"Psr17Factory":{"abstract":true,"final":false,"extends":"","implements":["\\slim\\interfaces\\psr17factoryinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$responseFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$streamFactoryClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$serverRequestCreatorClass":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]},"$serverRequestCreatorMethod":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string\n     *\/","attributes":[]}},"methods":{"getResponseFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getStreamFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["StreamFactoryInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"getServerRequestCreator":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"isResponseFactoryAvailable":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"isStreamFactoryAvailable":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"isServerRequestCreatorAvailable":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}}},"Psr17FactoryProvider":{"abstract":false,"final":false,"extends":"","implements":["\\slim\\interfaces\\psr17factoryproviderinterface"],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"properties":{"$factories":{"value":"","visibility":"protected","static":true,"typehint":[""],"phpdoc":"\/**\n     * @var string[]\n     *\/","attributes":[]}},"methods":{"getFactories":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]},"setFactories":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$factories","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]},"addFactory":{"visibility":"public","static":true,"abstract":false,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$factory","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * {@inheritdoc}\n     *\/","attributes":[]}]}}}}},"\\Slim\\Interfaces\\":{"interface":{"RequestHandlerInvocationStrategyInterface":{"abstract":false,"final":false,"extends":"\\slim\\interfaces\\invocationstrategyinterface","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false},"RouteResolverInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"computeRoutingResults":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RoutingResults"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $uri Should be ServerRequestInterface::getUri()->getPath()\n     * @param string $method\n     * @return RoutingResults\n     *\/","attributes":[]},{"name":"$method","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"resolveRoute":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$identifier","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $identifier\n     * @return RouteInterface\n     *\/","attributes":[]}]}}},"InvocationStrategyInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"\/**\n * Defines a contract for invoking a route callable.\n *\/","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":["callable"],"value":"","phpdoc":"\/**\n     * Invoke a route callable.\n     *\n     * @param callable               $callable       The callable to invoke using the strategy.\n     * @param ServerRequestInterface $request        The request object.\n     * @param ResponseInterface      $response       The response object.\n     * @param array                  $routeArguments The route's placeholder arguments\n     *\n     * @return ResponseInterface The response from the callable.\n     *\/","attributes":[]},{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$response","reference":false,"typehint":["ResponseInterface"],"value":"","phpdoc":"","attributes":[]},{"name":"$routeArguments","reference":false,"typehint":["array"],"value":"","phpdoc":"","attributes":[]}]}}},"RouteParserInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"relativeUrlFor":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Build the path for a named route excluding the base path\n     *\n     *\n     * @param string $routeName   Route name\n     * @param array  $data        Named argument replacement data\n     * @param array  $queryParams Optional query string parameters\n     *\n     * @return string\n     *\n     * @throws RuntimeException         If named route does not exist\n     * @throws InvalidArgumentException If required data not provided\n     *\/","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]},"urlFor":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Build the path for a named route including the base path\n     *\n     * @param string $routeName   Route name\n     * @param array  $data        Named argument replacement data\n     * @param array  $queryParams Optional query string parameters\n     *\n     * @return string\n     *\n     * @throws RuntimeException         If named route does not exist\n     * @throws InvalidArgumentException If required data not provided\n     *\/","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]},"fullUrlFor":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["UriInterface"],"value":"","phpdoc":"\/**\n     * Get fully qualified URL for named route\n     *\n     * @param UriInterface $uri\n     * @param string       $routeName   Route name\n     * @param array        $data        Named argument replacement data\n     * @param array        $queryParams Optional query string parameters\n     *\n     * @return string\n     *\/","attributes":[]},{"name":"$routeName","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$data","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]},{"name":"$queryParams","reference":false,"typehint":["array"],"value":"[ ]","phpdoc":"","attributes":[]}]}}},"DispatcherInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"dispatch":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RoutingResults"],"phpdoc":"","attributes":[],"arguments":[{"name":"$method","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Get routing results for a given request method and uri\n     *\n     * @param string $method\n     * @param string $uri\n     * @return RoutingResults\n     *\/","attributes":[]},{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"getAllowedMethods":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["array"],"phpdoc":"","attributes":[],"arguments":[{"name":"$uri","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Get allowed methods for a given uri\n     *\n     * @param string $uri\n     * @return array\n     *\/","attributes":[]}]}}},"RouteCollectorInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"getRouteParser":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteParserInterface"],"phpdoc":"\/**\n     * Get the route parser\n     *\n     * @return RouteParserInterface\n     *\/","attributes":[]},"getDefaultInvocationStrategy":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["InvocationStrategyInterface"],"phpdoc":"\/**\n     * Get default route invocation strategy\n     *\n     * @return InvocationStrategyInterface\n     *\/","attributes":[]},"setDefaultInvocationStrategy":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$strategy","reference":false,"typehint":["InvocationStrategyInterface"],"value":"","phpdoc":"\/**\n     * Set default route invocation strategy\n     *\n     * @param InvocationStrategyInterface $strategy\n     * @return RouteCollectorInterface\n     *\/","attributes":[]}]},"getCacheFile":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string","?"],"phpdoc":"\/**\n     * Get path to FastRoute cache file\n     *\n     * @return null|string\n     *\/","attributes":[]},"setCacheFile":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$cacheFile","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set path to FastRoute cache file\n     *\n     * @param string $cacheFile\n     * @return RouteCollectorInterface\n     *\n     * @throws InvalidArgumentException\n     * @throws RuntimeException\n     *\/","attributes":[]}]},"getBasePath":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * Get the base path used in pathFor()\n     *\n     * @return string\n     *\/","attributes":[]},"setBasePath":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$basePath","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set the base path used in pathFor()\n     *\n     * @param string $basePath\n     * @return RouteCollectorInterface\n     *\/","attributes":[]}]},"getRoutes":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * Get route objects\n     *\n     * @return RouteInterface[]\n     *\/","attributes":[]},"getNamedRoute":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Get named route object\n     *\n     * @param string $name Route name\n     *\n     * @return RouteInterface\n     *\n     * @throws RuntimeException   If named route does not exist\n     *\/","attributes":[]}]},"removeNamedRoute":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Remove named route\n     *\n     * @param string $name Route name\n     * @return RouteCollectorInterface\n     *\n     * @throws RuntimeException   If named route does not exist\n     *\/","attributes":[]}]},"lookupRoute":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$identifier","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Lookup a route via the route's unique identifier\n     *\n     * @param string $identifier\n     *\n     * @return RouteInterface\n     *\n     * @throws RuntimeException   If route of identifier does not exist\n     *\/","attributes":[]}]},"group":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add route group\n     *\n     * @param string          $pattern\n     * @param string|callable $callable\n     * @return RouteGroupInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"map":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * Add route\n     *\n     * @param string[]        $methods Array of HTTP methods\n     * @param string          $pattern The route pattern\n     * @param callable|string $handler The route callable\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$handler","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]}}},"ErrorRendererInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"\/**\n     * @param Throwable $exception\n     * @param bool      $displayErrorDetails\n     * @return string\n     *\/","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]}}},"ServerRequestCreatorInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"createServerRequestFromGlobals":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["ServerRequestInterface"],"phpdoc":"\/**\n     * @return ServerRequestInterface\n     *\/","attributes":[]}}},"RouteGroupInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"collectRoutes":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"\/**\n     * @return RouteGroupInterface\n     *\/","attributes":[]},"add":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Add middleware to the route group\n     *\n     * @param MiddlewareInterface|string|callable $middleware\n     * @return RouteGroupInterface\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * Add middleware to the route group\n     *\n     * @param MiddlewareInterface $middleware\n     * @return RouteGroupInterface\n     *\/","attributes":[]}]},"appendMiddlewareToDispatcher":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$dispatcher","reference":false,"typehint":["MiddlewareDispatcher"],"value":"","phpdoc":"\/**\n     * Append the group's middleware to the MiddlewareDispatcher\n     *\n     * @param MiddlewareDispatcher $dispatcher\n     * @return RouteGroupInterface\n     *\/","attributes":[]}]},"getPattern":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * Get the RouteGroup's pattern\n     *\n     * @return string\n     *\/","attributes":[]}}},"ErrorHandlerInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"__invoke":{"visibility":"public","static":false,"abstract":false,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * @param ServerRequestInterface $request\n     * @param Throwable              $exception\n     * @param bool                   $displayErrorDetails\n     * @param bool                   $logErrors\n     * @param bool                   $logErrorDetails\n     * @return ResponseInterface\n     *\/","attributes":[]},{"name":"$exception","reference":false,"typehint":["Throwable"],"value":"","phpdoc":"","attributes":[]},{"name":"$displayErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrors","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]},{"name":"$logErrorDetails","reference":false,"typehint":["bool"],"value":"","phpdoc":"","attributes":[]}]}}},"RouteInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"getInvocationStrategy":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["InvocationStrategyInterface"],"phpdoc":"\/**\n     * Get route invocation strategy\n     *\n     * @return InvocationStrategyInterface\n     *\/","attributes":[]},"setInvocationStrategy":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$invocationStrategy","reference":false,"typehint":["InvocationStrategyInterface"],"value":"","phpdoc":"\/**\n     * Set route invocation strategy\n     *\n     * @param InvocationStrategyInterface $invocationStrategy\n     * @return RouteInterface\n     *\/","attributes":[]}]},"getMethods":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * Get route methods\n     *\n     * @return string[]\n     *\/","attributes":[]},"getPattern":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * Get route pattern\n     *\n     * @return string\n     *\/","attributes":[]},"setPattern":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set route pattern\n     *\n     * @param string $pattern\n     * @return RouteInterface\n     *\/","attributes":[]}]},"getCallable":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":[""],"phpdoc":"\/**\n     * Get route callable\n     *\n     * @return callable|string\n     *\/","attributes":[]},"setCallable":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Set route callable\n     *\n     * @param callable|string $callable\n     * @return RouteInterface\n     *\/","attributes":[]}]},"getName":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["?string"],"phpdoc":"\/**\n     * Get route name\n     *\n     * @return null|string\n     *\/","attributes":[]},"setName":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set route name\n     *\n     * @param string $name\n     *\n     * @return static\n     *\/","attributes":[]}]},"getIdentifier":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * Get the route's unique identifier\n     *\n     * @return string\n     *\/","attributes":[]},"getArgument":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["?string"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Retrieve a specific route argument\n     *\n     * @param string      $name\n     * @param string|null $default\n     *\n     * @return string|null\n     *\/","attributes":[]},{"name":"$default","reference":false,"typehint":["string","?"],"value":"null","phpdoc":"","attributes":[]}]},"getArguments":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * Get route arguments\n     *\n     * @return string[]\n     *\/","attributes":[]},"setArgument":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$name","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set a route argument\n     *\n     * @param string $name\n     * @param string $value\n     *\n     * @return self\n     *\/","attributes":[]},{"name":"$value","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]}]},"setArguments":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$arguments","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * Replace route arguments\n     *\n     * @param string[] $arguments\n     *\n     * @return self\n     *\/","attributes":[]}]},"add":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * @param MiddlewareInterface|string|callable $middleware\n     * @return RouteInterface\n     *\/","attributes":[]}]},"addMiddleware":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$middleware","reference":false,"typehint":["MiddlewareInterface"],"value":"","phpdoc":"\/**\n     * @param MiddlewareInterface $middleware\n     * @return RouteInterface\n     *\/","attributes":[]}]},"prepare":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$arguments","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * Prepare the route for use\n     *\n     * @param array $arguments\n     * @return RouteInterface\n     *\/","attributes":[]}]},"run":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["ResponseInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$request","reference":false,"typehint":["ServerRequestInterface"],"value":"","phpdoc":"\/**\n     * Run route\n     *\n     * This method traverses the middleware stack, including the route's callable\n     * and captures the resultant HTTP response object. It then sends the response\n     * back to the Application.\n     *\n     * @param ServerRequestInterface $request\n     * @return ResponseInterface\n     *\/","attributes":[]}]}}},"CallableResolverInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"resolve":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["callable"],"phpdoc":"","attributes":[],"arguments":[{"name":"$toResolve","reference":false,"typehint":[""],"value":"","phpdoc":"\/**\n     * Resolve $toResolve into a callable\n     *\n     * @param string|callable $toResolve\n     * @return callable\n     *\/","attributes":[]}]}}},"Psr17FactoryInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"getResponseFactory":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"\/**\n     * @return ResponseFactoryInterface\n     *\n     * @throws RuntimeException when the factory could not be instantiated\n     *\/","attributes":[]},"getStreamFactory":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["StreamFactoryInterface"],"phpdoc":"\/**\n     * @return StreamFactoryInterface\n     *\n     * @throws RuntimeException when the factory could not be instantiated\n     *\/","attributes":[]},"getServerRequestCreator":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["ServerRequestCreatorInterface"],"phpdoc":"\/**\n     * @return ServerRequestCreatorInterface\n     *\n     * @throws RuntimeException when the factory could not be instantiated\n     *\/","attributes":[]},"isResponseFactoryAvailable":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * Is the PSR-17 ResponseFactory available\n     *\n     * @return bool\n     *\/","attributes":[]},"isStreamFactoryAvailable":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * Is the PSR-17 StreamFactory available\n     *\n     * @return bool\n     *\/","attributes":[]},"isServerRequestCreatorAvailable":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["bool"],"phpdoc":"\/**\n     * Is the ServerRequest creator available\n     *\n     * @return bool\n     *\/","attributes":[]}}},"RouteCollectorProxyInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"getResponseFactory":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["ResponseFactoryInterface"],"phpdoc":"\/**\n     * @return ResponseFactoryInterface\n     *\/","attributes":[]},"getCallableResolver":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["CallableResolverInterface"],"phpdoc":"\/**\n     * @return CallableResolverInterface\n     *\/","attributes":[]},"getContainer":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["?ContainerInterface"],"phpdoc":"\/**\n     * @return ContainerInterface|null\n     *\/","attributes":[]},"getRouteCollector":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorInterface"],"phpdoc":"\/**\n     * @return RouteCollectorInterface\n     *\/","attributes":[]},"getBasePath":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["string"],"phpdoc":"\/**\n     * Get the RouteCollectorProxy's base path\n     *\n     * @return string\n     *\/","attributes":[]},"setBasePath":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteCollectorProxyInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$basePath","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Set the RouteCollectorProxy's base path\n     *\n     * @param string $basePath\n     *\n     * @return RouteCollectorProxyInterface\n     *\/","attributes":[]}]},"get":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add GET route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"post":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add POST route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"put":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add PUT route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"patch":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add PATCH route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"delete":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add DELETE route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"options":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add OPTIONS route\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"any":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add route for any HTTP method\n     *\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"map":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$methods","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * Add route with multiple methods\n     *\n     * @param  string[]        $methods  Numeric array of HTTP method names\n     * @param  string          $pattern  The route URI pattern\n     * @param  callable|string $callable The route callback routine\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"group":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteGroupInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$pattern","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Route Groups\n     *\n     * This method accepts a route pattern and a callback. All route\n     * declarations in the callback will be prepended by the group(s)\n     * that it is in.\n     *\n     * @param string          $pattern\n     * @param string|callable $callable\n     *\n     * @return RouteGroupInterface\n     *\/","attributes":[]},{"name":"$callable","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]}]},"redirect":{"visibility":"public","static":false,"abstract":true,"reference":false,"returntypes":["RouteInterface"],"phpdoc":"","attributes":[],"arguments":[{"name":"$from","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * Add a route that sends an HTTP redirect\n     *\n     * @param string              $from\n     * @param string|UriInterface $to\n     * @param int                 $status\n     *\n     * @return RouteInterface\n     *\/","attributes":[]},{"name":"$to","reference":false,"typehint":[""],"value":"","phpdoc":"","attributes":[]},{"name":"$status","reference":false,"typehint":["int"],"value":302,"phpdoc":"","attributes":[]}]}}},"Psr17FactoryProviderInterface":{"abstract":false,"final":false,"extends":"","implements":[],"use":[],"useoptions":[],"phpdoc":"","attributes":[],"php":false,"methods":{"getFactories":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["array"],"phpdoc":"\/**\n     * @return string[]\n     *\/","attributes":[]},"setFactories":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$factories","reference":false,"typehint":["array"],"value":"","phpdoc":"\/**\n     * @var string[]\n     *\/","attributes":[]}]},"addFactory":{"visibility":"public","static":true,"abstract":true,"reference":false,"returntypes":["void"],"phpdoc":"","attributes":[],"arguments":[{"name":"$factory","reference":false,"typehint":["string"],"value":"","phpdoc":"\/**\n     * @param string $factory\n     * @return void\n     *\/","attributes":[]}]}}}}}}}